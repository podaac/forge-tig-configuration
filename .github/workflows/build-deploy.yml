# This is the main build pipeline that verifies and publishes the software
name: Build
# Controls when the workflow will run
on:
  # Triggers the workflow on push events
  push:
    branches: [ develop, release/**, main, feature/**, issue/**, issues/**, dependabot/** ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # First job in the workflow installs and verifies the software
  build:
    name: Build, Test, Deploy
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      ## Describe workspace
      - name: Describe Workspace
        run: |
          echo "---" >build-info.yaml;
          echo "  build_environment: \"the_env\"" >>build-info.yaml; 
          ls -al
          cat build-info.yaml




      ## Update build-info yaml file for pre-alpha
      - name: Pre Alpha
        if: ${{ startsWith(github.ref, 'refs/heads/feature/') }} ||
            ${{ contains(github.base_ref, 'develop') }}
        run: echo "TARGET_ENV=sit" >> $GITHUB_ENV

      ## Update build-info yaml file for alpha
      - name: Alpha
        if: ${{ startsWith(github.ref, 'refs/heads/develop/') }}
        run: echo "TARGET_ENV=sit" >> $GITHUB_ENV

      ## Update build-info yaml file for release candidates
      - name: Release Candidate
        if: ${{ contains(github.base_ref, 'master') }}
        run: echo "TARGET_ENV=uat" >> $GITHUB_ENV

      ## Update build-info yaml file for release
      - name: Release
        if: ${{ startsWith(github.ref, 'refs/heads/master/') }}
        run: echo "TARGET_ENV=ops" >> $GITHUB_ENV

      ## Update build-info yaml file for release
      - name: Release
        if: env.TARGET_ENV == 'sit' || 
            env.TARGET_ENV == 'uat' || 
            env.TARGET_ENV == 'ops'
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'build-info.yaml'
          propertyPath: 'deploy_env'
          value: ${{ env.TARGET_ENV }}
          commitChange: false



      # ## Test Configuration file
      # - name: Display Configs
      #   run: | 
      #     cat build-info.yaml
      #     echo "::set-env name=TARGET_ENV::$( cat build-info.yaml.json | jq --compact-output )"

      ## Deployment

      - name: Deploy
        # if: ${{ startsWith(github.ref, 'refs/heads/develop/') }} ||
        #     ${{ startsWith(github.ref, 'refs/heads/master/') }} ||
        #     ${{ contains(github.base_ref, 'master') }} ||
        #     ${{ startsWith(github.ref, 'refs/heads/master/') }}
        runs-on: ubuntu-latest
        env:
          NODE_ENV: devops1
          ONE_STRING: AWS_ACCESS_KEY_ID_SERVICES${{ uppercase(env.TARGET_ENV) }}
#            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_SERVICES_ }}
#            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_SERVICES_ }}
#         container:
#           image: ${{ env.ARTIFACTORY_DOCKER_REGISTRY }}/podaac/service/deploy-terraform-0.12.31
        run: ls -al
          # ports:

          #   - 80
          # volumes:
          #   - /home/cm/.aws:/home/dockeruser/.aws:ro
          # options: --cpus 1
          # run: ls -al
